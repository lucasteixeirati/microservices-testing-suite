apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: microservices
data:
  fluent.conf: |
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    <filter kubernetes.**>
      @type record_transformer
      <record>
        service_name ${record["kubernetes"]["labels"]["app"]}
        namespace_name ${record["kubernetes"]["namespace_name"]}
        pod_name ${record["kubernetes"]["pod_name"]}
      </record>
    </filter>

    <match kubernetes.**>
      @type copy
      <store>
        @type elasticsearch
        host elasticsearch
        port 9200
        index_name microservices-logs
        type_name _doc
        reconnect_on_error true
        reload_on_failure true
        reload_connections false
        request_timeout 30s
        <buffer>
          @type file
          path /var/log/fluentd-buffers/kubernetes.system.buffer
          flush_mode interval
          retry_type exponential_backoff
          flush_thread_count 2
          flush_interval 5s
          retry_max_times 5
          retry_max_interval 30
          chunk_limit_size 2M
          queue_limit_length 8
          overflow_action drop_oldest_chunk
        </buffer>
        <secondary>
          @type file
          path /var/log/fluentd-failed-records
          compress gzip
          <buffer>
            flush_mode immediate
          </buffer>
        </secondary>
      </store>
      <store>
        @type stdout
        <format>
          @type json
        </format>
        <filter>
          @type grep
          <regexp>
            key level
            pattern ^(ERROR|WARN)$
          </regexp>
        </filter>
      </store>
    </match>
    
    # Dead letter queue for failed records
    <match failed.**>
      @type file
      path /var/log/fluentd-dead-letter-queue
      compress gzip
      <buffer>
        flush_mode immediate
      </buffer>
    </match>
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: microservices
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccountName: fluentd
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch
        env:
        - name: FLUENT_ELASTICSEARCH_HOST
          value: "elasticsearch"
        - name: FLUENT_ELASTICSEARCH_PORT
          value: "9200"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "ps aux | grep fluentd"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "ps aux | grep fluentd"
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "200Mi"
            cpu: "100m"
          limits:
            memory: "400Mi"
            cpu: "200m"
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluentd-config
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-config
        configMap:
          name: fluentd-config
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: microservices
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: microservices